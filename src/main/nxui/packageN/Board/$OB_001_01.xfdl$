<?xml version="1.0" encoding="utf-8"?>
<FDL version="2.1">
  <Form id="OB_001_01" width="400" height="400" titletext="주문등록팝업" onload="OB_001_01_onload">
    <Layouts>
      <Layout height="400" width="400">
        <Static id="sta00_03" taborder="0" text="고객명" left="20" top="13" width="164" height="35" font="bold 14px/normal &quot;Gulim&quot;" textAlign="center" onclick="sta00_onclick" visible="true"/>
        <Button id="btn_exit" taborder="1" text="닫기" left="224" top="325" width="122" height="50" onclick="btn_exit_onclick" enable="true" visible="true"/>
        <Button id="btn_regOrd" taborder="2" text="주문 등록" left="41" top="325" width="122" height="50" enable="true" visible="true" onclick="btn_regOrd_onclick"/>
        <Combo id="cbo_itemNm" taborder="3" text="" left="200" top="260" width="170" height="30" value="" index="-1" innerdataset="ds_itemCombo" codecolumn="ITEM_CD" datacolumn="ITEM_NM" displaynulltext="선택" visible="true"/>
        <Static id="sta00_02_00" taborder="4" text="주문 상품" left="20" top="255" width="164" height="35" font="bold 14px/normal &quot;Gulim&quot;" textAlign="center" onclick="sta00_02_onclick" visible="true"/>
        <Combo id="cbo_custGbNm" taborder="5" text="" left="200" top="215" width="170" height="30" value="" index="-1" innerdataset="ds_custGbCombo" codecolumn="CD_VAL1" datacolumn="CD_NM1" displaynulltext="선택" visible="true"/>
        <Edit id="edt_custNm" taborder="6" left="200" top="17" width="170" height="27" inputtype="normal" visible="true"/>
        <Edit id="edt_addr" taborder="7" left="200" top="167" width="170" height="27" inputtype="normal" visible="true"/>
        <Static id="sta00_03_02" taborder="8" text="주소" left="20" top="163" width="164" height="35" font="bold 14px/normal &quot;Gulim&quot;" textAlign="center" onclick="sta00_onclick" visible="true"/>
        <Edit id="edt_birBizNo" taborder="9" left="200" top="117" width="170" height="27" inputtype="normal" visible="true"/>
        <Static id="sta00_03_01" taborder="10" text="생년월일/사업자번호" left="20" top="113" width="164" height="35" font="bold 14px/normal &quot;Gulim&quot;" textAlign="center" onclick="sta00_onclick" visible="true"/>
        <Edit id="edt_phone" taborder="11" left="200" top="67" width="170" height="27" inputtype="normal" visible="true"/>
        <Static id="sta00_03_00" taborder="12" text="휴대폰번호" left="20" top="63" width="164" height="35" font="bold 14px/normal &quot;Gulim&quot;" textAlign="center" onclick="sta00_onclick" visible="true"/>
        <Static id="sta00_02" taborder="13" text="고객 구분" left="20" top="210" width="164" height="35" font="bold 14px/normal &quot;Gulim&quot;" textAlign="center" onclick="sta00_02_onclick" visible="true"/>
      </Layout>
    </Layouts>
    <Script type="xscript5.1"><![CDATA[
this.OB_001_01_onload = function(obj:nexacro.Form,e:nexacro.LoadEventInfo)
{
	//alert("onload 함수 실행");
	//주문 등록을 위한 고객구분, 주문상품 콤보박스 초기화
	
	// 1. 고객구분 콤보박스에 출력할 데이터들을 TB_CD_MST 테이블로부터 갑슬 조회해 오자.
	// 이 로직은 앞서 OB_001.xfdl onload 에서 만든 경험이 있다. 이미 만들어둔 로직 그대로 사용하자.
	this.fn_setCustGbCbo();
	
	// 2. 주문상품 리스트를 TB_ITEM 테이블로부터 조회하여 콤보박스 안의 데이터를 채워주자
	// 방법은 위 TB_CD_MST 테이블을 조회해 오는 방식과 유사하다.
	this.fn_setItemCbo();
};



this.btn_regOrd_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	// alert("주문 등록 버튼 클릭");
	// TB_ORD, TB_CUST에 INSERT 그러나 이미 고객정보에 등록된 사람이면 TB_CUST에는 등록하지 않는다
	
	// 1. 주문등록을 위해 입력받은 6개의 값을 데이터셋에 담아 서버로 전송해야한다.
	// 따라서, 데이터셋을 만들고 사용자가 입력한 6개의 값을 담아주자.
	this.ds_regOrd.clearData();
	this.ds_regOrd.addRow();
	this.ds_regOrd.setColumn(0, "CUST_NM", this.edt_custNm.value);
	this.ds_regOrd.setColumn(0, "PHONE", this.edt_phone.value);
	this.ds_regOrd.setColumn(0, "BIR_BIZ_NO", this.edt_birBizNo.value);
	this.ds_regOrd.setColumn(0, "ADDR", this.edt_addr.value);
	this.ds_regOrd.setColumn(0, "CUST_GBCD", this.cbo_custGbNm.value);
	this.ds_regOrd.setColumn(0, "ITEM_CD", this.cbo_itemNm.value);
	
	trace("CUST_NM		:" + this.ds_regOrd.getColumn(0,"CUST_NM"));
	trace("PHONE		:" + this.ds_regOrd.getColumn(0,"PHONE"));
	trace("BIR_BIZ_NO		:" + this.ds_regOrd.getColumn(0,"BIR_BIZ_NO"));
	trace("ADDR		:" + this.ds_regOrd.getColumn(0,"ADDR"));
	trace("CUST_GBCD		:" + this.ds_regOrd.getColumn(0,"CUST_GBCD"));
	trace("ITEM_CD		:" + this.ds_regOrd.getColumn(0,"ITEM_CD"));
	
	
	// 2. 세팅한 ds_regOrd 데이터셋을 서버로 전송해서 주문등록을 해보자.
	var strSvcId = "insertOrdList";		
	var strSvcUrl = "insertOrdList.do"; 		
	var inData = "ds_regOrd=ds_regOrd";												
	var outData = "";		// 서버로 부터 받을 데이터는 없다.												
	var strAvg = "";				
	var callBackFnc = "fnCallback";
	this.gfnTransaction(strSvcId	,
						strSvcUrl	,
						inData		,
						outData		,
						strAvg		,
						callBackFnc);	
	
};



this.btn_exit_onclick = function(obj:nexacro.Button,e:nexacro.ClickEventInfo)
{
	//alert("닫기 버튼 클릭");
	this.close();
};

/*
* 사용자 정의 함수
*/
this.fn_setCustGbCbo = function()
{
	this.ds_searchCustGb.clearData();
	this.ds_searchCustGb.addRow();
	this.ds_searchCustGb.setColumn(0, "CD_VAL", "002");
		
	var strSvcId = "selectCommonCode";		
	var strSvcUrl = "selectCommonCode.do"; 		
	var inData = "ds_search=ds_searchCustGb";											
	var outData = "ds_custGbCombo=ds_commonCode";
												
	var strAvg = "";							
	var callBackFnc = "fnCallback";		
	this.gfnTransaction(strSvcId	,
						strSvcUrl	,
						inData		,
						outData		,
						strAvg		,
						callBackFnc);		
};

this.fn_setItemCbo = function() 
{
	// where절이 필요 없기 때문에 dataset이 필요 없다.
	var strSvcId = "selectItemList";		
	var strSvcUrl = "selectItemList.do"; 		
	var inData = ""; // 서버로 전송할 데이터가 없음											
	var outData = "ds_itemCombo = ds_itemCombo";
												
	var strAvg = "";							
	var callBackFnc = "fnCallback";		
	this.gfnTransaction(strSvcId	,
						strSvcUrl	,
						inData		,
						outData		,
						strAvg		,
						callBackFnc);	
}

/*
* fnCallback함수 (서버 수신 후 후처리 영역)
*/
this.fnCallback = function(svcID, errorCode, errorMsg)
{
	switch(svcID)
	{
		case "selectCommonCode":
			trace("고객구분 콤보박스 세팅 완료");
			break;
		case "selectItemList":
			trace("주문상품 콤보박스 세팅 완료");
			break;
		case "insertOrdList":
			this.alert("주문 등록 완료");
			this.close();
			break;
	}
}]]></Script>
    <Objects>
      <Dataset id="ds_searchCustGb">
        <ColumnInfo>
          <Column id="CD_VAL" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_custGbCombo">
        <ColumnInfo>
          <Column id="CD_VAL1" type="STRING" size="256"/>
          <Column id="CD_NM1" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_itemCombo">
        <ColumnInfo>
          <Column id="ITEM_CD" type="STRING" size="256"/>
          <Column id="ITEM_NM" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
      <Dataset id="ds_regOrd">
        <ColumnInfo>
          <Column id="CUST_NM" type="STRING" size="256"/>
          <Column id="PHONE" type="STRING" size="256"/>
          <Column id="BIR_BIZ_NO" type="STRING" size="256"/>
          <Column id="ADDR" type="STRING" size="256"/>
          <Column id="CUST_GBCD" type="STRING" size="256"/>
          <Column id="ITEM_CD" type="STRING" size="256"/>
        </ColumnInfo>
      </Dataset>
    </Objects>
  </Form>
</FDL>
